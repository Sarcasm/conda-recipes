From da92ebd68272a4e6da8afd170790137f02f7692d Mon Sep 17 00:00:00 2001
From: Guillaume Papin <guillaume.papin@epitech.eu>
Date: Sat, 27 Oct 2018 01:28:45 +0200
Subject: [PATCH] CMake: remove explicit addition of '-std=gnu++11' compile
 option

The conda toolchain contains '-std=c++17' in its CXXFLAGS.
This means the command line was: g++ ... -std=c++17 ... -std=c++11 ...

Also, even if the conda toolchain did not contain the '-std=c++XX' flag,
we probably don't need -std=c++11,
because the conda toolcain is usually quite recent.
Since GCC version 6.1, the default standard is C++14,
https://gcc.gnu.org/projects/cxx-status.html#cxx14.
This means libgraphparser should compile fine with the conda toolchain without
explicitely setting a standard.

It might be better to specify some sort of required standard via CMake
compile features, but that's not how libgraphqlparser does it for now.
---
 CMakeLists.txt | 2 --
 1 file changed, 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c4c8b3e..4b191e0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -5,8 +5,6 @@ SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake" "${CMAKE_MODULE_PATH}")
 
 INCLUDE(version)
 
-SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
-
 FIND_PACKAGE(PythonInterp 2 REQUIRED)
 IF (NOT PYTHON_VERSION_MAJOR EQUAL 2)
   MESSAGE(FATAL_ERROR "Python 2 is required.")
-- 
2.10.0

