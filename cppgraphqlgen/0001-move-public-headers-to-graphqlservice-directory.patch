From 05a4c636d740c6c32f59236b62dfab19c381fbee Mon Sep 17 00:00:00 2001
From: Guillaume Papin <guillaume.papin@epitech.eu>
Date: Thu, 6 Dec 2018 00:40:18 +0100
Subject: [PATCH 1/3] move public headers to graphqlservice/ directory

This is where the file are installed.
This means the files generated by schemagen should also specify this directory.
---
 CMakeLists.txt                                     | 53 ++++++++++++++--------
 GraphQLResponse.cpp                                |  4 +-
 GraphQLService.cpp                                 |  4 +-
 GraphQLTree.cpp                                    |  4 +-
 Introspection.cpp                                  |  4 +-
 JSONResponse.cpp                                   |  2 +-
 SchemaGenerator.cpp                                |  4 +-
 SchemaGenerator.h                                  |  4 +-
 cmake/cppgraphqlgen-config.cmake                   | 18 ++++++++
 .../graphqlservice/GraphQLResponse.h               |  0
 .../graphqlservice/GraphQLService.h                |  6 +--
 .../graphqlservice/GraphQLTree.h                   |  0
 .../graphqlservice/Introspection.h                 |  4 +-
 .../graphqlservice/JSONResponse.h                  |  2 +-
 samples/IntrospectionSchema.cpp                    |  2 +-
 samples/IntrospectionSchema.h                      |  2 +-
 samples/TodaySchema.cpp                            |  2 +-
 samples/TodaySchema.h                              |  2 +-
 test_today.cpp                                     |  2 +-
 tests.cpp                                          |  5 +-
 20 files changed, 80 insertions(+), 44 deletions(-)
 create mode 100644 cmake/cppgraphqlgen-config.cmake
 rename GraphQLResponse.h => include/graphqlservice/GraphQLResponse.h (100%)
 rename GraphQLService.h => include/graphqlservice/GraphQLService.h (99%)
 rename GraphQLTree.h => include/graphqlservice/GraphQLTree.h (100%)
 rename Introspection.h => include/graphqlservice/Introspection.h (99%)
 rename JSONResponse.h => include/graphqlservice/JSONResponse.h (93%)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index cddf102..2d3f670 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,8 @@ endif()
 
 find_package(Threads MODULE REQUIRED)
 
+include(CMakePackageConfigHelpers)
+
 find_package(pegtl CONFIG REQUIRED)
 
 add_executable(schemagen
@@ -18,12 +20,16 @@ add_executable(schemagen
   GraphQLResponse.cpp
   SchemaGenerator.cpp)
 target_link_libraries(schemagen PRIVATE taocpp::pegtl)
-target_include_directories(schemagen PRIVATE ${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR})
+target_include_directories(schemagen PRIVATE ${CMAKE_SOURCE_DIR}/include ${CMAKE_BINARY_DIR})
 set_property(TARGET schemagen PROPERTY CXX_STANDARD 11)
 
 add_custom_command(
-  OUTPUT IntrospectionSchema.cpp IntrospectionSchema.h
+  OUTPUT
+    graphqlservice/IntrospectionSchema.cpp
+    graphqlservice/IntrospectionSchema.h
   COMMAND schemagen
+  COMMAND ${CMAKE_COMMAND} -E rename IntrospectionSchema.cpp graphqlservice/IntrospectionSchema.cpp
+  COMMAND ${CMAKE_COMMAND} -E rename IntrospectionSchema.h graphqlservice/IntrospectionSchema.h
   DEPENDS schemagen
   COMMENT "Generating IntrospectionSchema files"
 )
@@ -33,11 +39,15 @@ add_library(graphqlservice
   GraphQLResponse.cpp
   GraphQLService.cpp
   Introspection.cpp
-  IntrospectionSchema.cpp)
+  ${CMAKE_BINARY_DIR}/graphqlservice/IntrospectionSchema.cpp)
 target_link_libraries(graphqlservice PRIVATE taocpp::pegtl)
 target_link_libraries(graphqlservice PUBLIC ${CMAKE_THREAD_LIBS_INIT})
-target_include_directories(graphqlservice SYSTEM INTERFACE $<INSTALL_INTERFACE:include>)
-target_include_directories(graphqlservice PRIVATE ${CMAKE_SOURCE_DIR} ${CMAKE_BINARY_DIR})
+target_include_directories(graphqlservice
+  PUBLIC
+    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
+    $<BUILD_INTERFACE:${CMAKE_BINARY_DIR}>
+    $<INSTALL_INTERFACE:include>
+)
 set_property(TARGET graphqlservice PROPERTY CXX_STANDARD 11)
 
 option(BUILD_TESTS "Build the tests and sample schema library." ON)
@@ -61,8 +71,8 @@ if(BUILD_TESTS OR UPDATE_SAMPLES)
 
     add_library(todaygraphql
        ${CMAKE_BINARY_DIR}/TodaySchema.cpp
-      Today.cpp
-	  JSONResponse.cpp)
+       Today.cpp
+       JSONResponse.cpp)
     target_link_libraries(todaygraphql PUBLIC
       graphqlservice)
     target_include_directories(todaygraphql SYSTEM PUBLIC ${RAPIDJSON_INCLUDE_DIRS})
@@ -101,8 +111,8 @@ if(BUILD_TESTS OR UPDATE_SAMPLES)
 
   if(UPDATE_SAMPLES)
     install(FILES
-      ${CMAKE_BINARY_DIR}/IntrospectionSchema.h
-      ${CMAKE_BINARY_DIR}/IntrospectionSchema.cpp
+      ${CMAKE_BINARY_DIR}/graphqlservice/IntrospectionSchema.h
+      ${CMAKE_BINARY_DIR}/graphqlservice/IntrospectionSchema.cpp
       ${CMAKE_BINARY_DIR}/TodaySchema.h
       ${CMAKE_BINARY_DIR}/TodaySchema.cpp
       DESTINATION ${CMAKE_SOURCE_DIR}/samples)
@@ -110,25 +120,32 @@ if(BUILD_TESTS OR UPDATE_SAMPLES)
 endif()
 
 install(TARGETS graphqlservice
-  EXPORT cppgraphqlgen-config
+  EXPORT cppgraphqlgen-targets
   RUNTIME DESTINATION bin
   ARCHIVE DESTINATION lib
   LIBRARY DESTINATION lib)
 
 install(TARGETS schemagen
+  EXPORT cppgraphqlgen-targets
   RUNTIME DESTINATION tools/cppgraphqlgen
   CONFIGURATIONS Release)
 
 install(FILES
-  GraphQLTree.h
-  GraphQLResponse.h
-  GraphQLService.h
-  Introspection.h
-  ${CMAKE_BINARY_DIR}/IntrospectionSchema.h
-  JSONResponse.h
+  include/graphqlservice/GraphQLTree.h
+  include/graphqlservice/GraphQLResponse.h
+  include/graphqlservice/GraphQLService.h
+  include/graphqlservice/Introspection.h
+  ${CMAKE_BINARY_DIR}/graphqlservice/IntrospectionSchema.h
+  include/graphqlservice/JSONResponse.h
   DESTINATION include/graphqlservice
   CONFIGURATIONS Release)
 
-install(EXPORT cppgraphqlgen-config
+set(CMAKE_INSTALL_CONFIGDIR lib/cmake/${PROJECT_NAME})
+install(FILES cmake/${PROJECT_NAME}-config.cmake
+  DESTINATION ${CMAKE_INSTALL_CONFIGDIR}
+)
+
+install(EXPORT cppgraphqlgen-targets
   NAMESPACE cppgraphqlgen::
-  DESTINATION share/cppgraphqlgen)
+  DESTINATION ${CMAKE_INSTALL_CONFIGDIR}
+)
diff --git a/GraphQLResponse.cpp b/GraphQLResponse.cpp
index aec51cb..bea68af 100644
--- a/GraphQLResponse.cpp
+++ b/GraphQLResponse.cpp
@@ -1,7 +1,7 @@
 // Copyright (c) Microsoft Corporation. All rights reserved.
 // Licensed under the MIT License.
 
-#include "GraphQLResponse.h"
+#include "graphqlservice/GraphQLResponse.h"
 
 #include <stdexcept>
 
@@ -466,4 +466,4 @@ ScalarType Value::release<ScalarType>()
 
 } /* namespace response */
 } /* namespace graphql */
-} /* namespace facebook */
\ No newline at end of file
+} /* namespace facebook */
diff --git a/GraphQLService.cpp b/GraphQLService.cpp
index 4f438e3..d8a7f7e 100644
--- a/GraphQLService.cpp
+++ b/GraphQLService.cpp
@@ -1,7 +1,7 @@
 // Copyright (c) Microsoft Corporation. All rights reserved.
 // Licensed under the MIT License.
 
-#include "GraphQLService.h"
+#include "graphqlservice/GraphQLService.h"
 #include "GraphQLGrammar.h"
 
 #include <iostream>
@@ -1066,4 +1066,4 @@ void OperationDefinitionVisitor::visit(const peg::ast_node& operationDefinition)
 
 } /* namespace service */
 } /* namespace graphql */
-} /* namespace facebook */
\ No newline at end of file
+} /* namespace facebook */
diff --git a/GraphQLTree.cpp b/GraphQLTree.cpp
index 2531c15..d70c9ab 100644
--- a/GraphQLTree.cpp
+++ b/GraphQLTree.cpp
@@ -1,7 +1,7 @@
 // Copyright (c) Microsoft Corporation. All rights reserved.
 // Licensed under the MIT License.
 
-#include "GraphQLTree.h"
+#include "graphqlservice/GraphQLTree.h"
 #include "GraphQLGrammar.h"
 
 #include <tao/pegtl/contrib/unescape.hpp>
@@ -597,4 +597,4 @@ std::unique_ptr<peg::ast<const char*>> operator "" _graphql(const char* text, si
 }
 
 } /* namespace graphql */
-} /* namespace facebook */
\ No newline at end of file
+} /* namespace facebook */
diff --git a/Introspection.cpp b/Introspection.cpp
index 3e7f01d..979385f 100644
--- a/Introspection.cpp
+++ b/Introspection.cpp
@@ -1,7 +1,7 @@
 // Copyright (c) Microsoft Corporation. All rights reserved.
 // Licensed under the MIT License.
 
-#include "Introspection.h"
+#include "graphqlservice/Introspection.h"
 
 namespace facebook {
 namespace graphql {
@@ -652,4 +652,4 @@ std::future<std::unique_ptr<std::string>> EnumValue::getDeprecationReason(servic
 
 } /* namespace facebook */
 } /* namespace graphql */
-} /* namespace introspection */
\ No newline at end of file
+} /* namespace introspection */
diff --git a/JSONResponse.cpp b/JSONResponse.cpp
index 9e34b73..f6810a5 100644
--- a/JSONResponse.cpp
+++ b/JSONResponse.cpp
@@ -1,7 +1,7 @@
 // Copyright (c) Microsoft Corporation. All rights reserved.
 // Licensed under the MIT License.
 
-#include "JSONResponse.h"
+#include "graphqlservice/JSONResponse.h"
 
 namespace facebook {
 namespace graphql {
diff --git a/SchemaGenerator.cpp b/SchemaGenerator.cpp
index 383e53b..a1712d7 100644
--- a/SchemaGenerator.cpp
+++ b/SchemaGenerator.cpp
@@ -1168,7 +1168,7 @@ bool Generator::outputHeader() const noexcept
 #include <string>
 #include <vector>
 
-#include "GraphQLService.h"
+#include <graphqlservice/GraphQLService.h>
 
 namespace facebook {
 namespace graphql {
@@ -1497,7 +1497,7 @@ bool Generator::outputSource() const noexcept
 // Licensed under the MIT License.
 
 #include ")cpp" << _filenamePrefix << R"cpp(Schema.h"
-#include "Introspection.h"
+#include <graphqlservice/Introspection.h>
 
 #include <algorithm>
 #include <functional>
diff --git a/SchemaGenerator.h b/SchemaGenerator.h
index 4e44ac1..52d7e03 100644
--- a/SchemaGenerator.h
+++ b/SchemaGenerator.h
@@ -6,7 +6,7 @@
 #include <array>
 #include <cstdio>
 
-#include "GraphQLService.h"
+#include "graphqlservice/GraphQLService.h"
 
 namespace facebook {
 namespace graphql {
@@ -301,4 +301,4 @@ private:
 
 } /* namespace schema */
 } /* namespace graphql */
-} /* namespace facebook */
\ No newline at end of file
+} /* namespace facebook */
diff --git a/cmake/cppgraphqlgen-config.cmake b/cmake/cppgraphqlgen-config.cmake
new file mode 100644
index 0000000..ac7ced6
--- /dev/null
+++ b/cmake/cppgraphqlgen-config.cmake
@@ -0,0 +1,18 @@
+# Copyright (c) Microsoft Corporation. All rights reserved.
+# Licensed under the MIT License.
+
+#[=======================================================================[.rst:
+cppgraphqlgen
+-------------
+
+The following import targets are created
+
+::
+
+  cppgraphqlgen::graphqlservice
+  cppgraphqlgen::schemagen
+#]=======================================================================]
+
+include(CMakeFindDependencyMacro)
+find_package(pegtl REQUIRED)
+include("${CMAKE_CURRENT_LIST_DIR}/cppgraphqlgen-targets.cmake")
diff --git a/GraphQLResponse.h b/include/graphqlservice/GraphQLResponse.h
similarity index 100%
rename from GraphQLResponse.h
rename to include/graphqlservice/GraphQLResponse.h
diff --git a/GraphQLService.h b/include/graphqlservice/GraphQLService.h
similarity index 99%
rename from GraphQLService.h
rename to include/graphqlservice/GraphQLService.h
index 2a25a19..c9aee2a 100644
--- a/GraphQLService.h
+++ b/include/graphqlservice/GraphQLService.h
@@ -3,8 +3,8 @@
 
 #pragma once
 
-#include "GraphQLTree.h"
-#include "GraphQLResponse.h"
+#include "graphqlservice/GraphQLTree.h"
+#include "graphqlservice/GraphQLResponse.h"
 
 #include <memory>
 #include <string>
@@ -552,4 +552,4 @@ private:
 
 } /* namespace service */
 } /* namespace graphql */
-} /* namespace facebook */
\ No newline at end of file
+} /* namespace facebook */
diff --git a/GraphQLTree.h b/include/graphqlservice/GraphQLTree.h
similarity index 100%
rename from GraphQLTree.h
rename to include/graphqlservice/GraphQLTree.h
diff --git a/Introspection.h b/include/graphqlservice/Introspection.h
similarity index 99%
rename from Introspection.h
rename to include/graphqlservice/Introspection.h
index 3da262e..6961a14 100644
--- a/Introspection.h
+++ b/include/graphqlservice/Introspection.h
@@ -3,7 +3,7 @@
 
 #pragma once
 
-#include "IntrospectionSchema.h"
+#include "graphqlservice/IntrospectionSchema.h"
 
 namespace facebook {
 namespace graphql {
@@ -253,4 +253,4 @@ private:
 
 } /* namespace facebook */
 } /* namespace graphql */
-} /* namespace introspection */
\ No newline at end of file
+} /* namespace introspection */
diff --git a/JSONResponse.h b/include/graphqlservice/JSONResponse.h
similarity index 93%
rename from JSONResponse.h
rename to include/graphqlservice/JSONResponse.h
index 9bbc273..ff0bd7f 100644
--- a/JSONResponse.h
+++ b/include/graphqlservice/JSONResponse.h
@@ -3,7 +3,7 @@
 
 #pragma once
 
-#include "GraphQLResponse.h"
+#include "graphqlservice/GraphQLResponse.h"
 
 #define RAPIDJSON_NAMESPACE facebook::graphql::rapidjson
 #define RAPIDJSON_NAMESPACE_BEGIN namespace facebook { namespace graphql { namespace rapidjson {
diff --git a/samples/IntrospectionSchema.cpp b/samples/IntrospectionSchema.cpp
index 0c3d5fa..092693b 100644
--- a/samples/IntrospectionSchema.cpp
+++ b/samples/IntrospectionSchema.cpp
@@ -2,7 +2,7 @@
 // Licensed under the MIT License.
 
 #include "IntrospectionSchema.h"
-#include "Introspection.h"
+#include <graphqlservice/Introspection.h>
 
 #include <algorithm>
 #include <functional>
diff --git a/samples/IntrospectionSchema.h b/samples/IntrospectionSchema.h
index 65f026d..639aba9 100644
--- a/samples/IntrospectionSchema.h
+++ b/samples/IntrospectionSchema.h
@@ -7,7 +7,7 @@
 #include <string>
 #include <vector>
 
-#include "GraphQLService.h"
+#include <graphqlservice/GraphQLService.h>
 
 namespace facebook {
 namespace graphql {
diff --git a/samples/TodaySchema.cpp b/samples/TodaySchema.cpp
index 06f2f42..70e2b60 100644
--- a/samples/TodaySchema.cpp
+++ b/samples/TodaySchema.cpp
@@ -2,7 +2,7 @@
 // Licensed under the MIT License.
 
 #include "TodaySchema.h"
-#include "Introspection.h"
+#include <graphqlservice/Introspection.h>
 
 #include <algorithm>
 #include <functional>
diff --git a/samples/TodaySchema.h b/samples/TodaySchema.h
index 6237f78..d886c0b 100644
--- a/samples/TodaySchema.h
+++ b/samples/TodaySchema.h
@@ -7,7 +7,7 @@
 #include <string>
 #include <vector>
 
-#include "GraphQLService.h"
+#include <graphqlservice/GraphQLService.h>
 
 namespace facebook {
 namespace graphql {
diff --git a/test_today.cpp b/test_today.cpp
index df96aa7..c95c580 100644
--- a/test_today.cpp
+++ b/test_today.cpp
@@ -2,7 +2,7 @@
 // Licensed under the MIT License.
 
 #include "Today.h"
-#include "JSONResponse.h"
+#include "graphqlservice/JSONResponse.h"
 
 #include <iostream>
 #include <stdexcept>
diff --git a/tests.cpp b/tests.cpp
index ee424d3..d332944 100644
--- a/tests.cpp
+++ b/tests.cpp
@@ -4,8 +4,9 @@
 #include <gtest/gtest.h>
 
 #include "Today.h"
+#include "graphqlservice/GraphQLTree.h"
+#include "graphqlservice/JSONResponse.h"
 #include "GraphQLGrammar.h"
-#include "JSONResponse.h"
 
 #include <tao/pegtl/analyze.hpp>
 
@@ -1044,4 +1045,4 @@ TEST(PegtlCase, ParseTodaySchema)
 TEST(PegtlCase, AnalyzeGrammar)
 {
 	ASSERT_EQ(0, analyze<document>(true)) << "there shuldn't be any infinite loops in the PEG version of the grammar";
-}
\ No newline at end of file
+}
-- 
2.10.0

